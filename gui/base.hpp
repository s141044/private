
#pragma once

#ifndef NN_RENDER_RENDER_GUI_BASE_HPP
#define NN_RENDER_RENDER_GUI_BASE_HPP

#include"../base.hpp"

///////////////////////////////////////////////////////////////////////////////////////////////////

namespace nn{

///////////////////////////////////////////////////////////////////////////////////////////////////

namespace render{

///////////////////////////////////////////////////////////////////////////////////////////////////

namespace gui{

///////////////////////////////////////////////////////////////////////////////////////////////////
//camera
///////////////////////////////////////////////////////////////////////////////////////////////////

class camera : public property_editor
{
public:

	camera(render::camera& camera) : m_camera(camera)
	{
	}

	void edit() override
	{
		window window("camera");
		if(window.is_open()){ edit_impl(); }
	}

	void edit_impl()
	{
		float3 position = m_camera.position();
		if(input_float3("position", position)){ m_camera.set_position(position); }

		float3 center = m_camera.center();
		if(input_float3("center", center)){ m_camera.look_at(position, center); }

		float distance = m_camera.distance();
		if(input_float("distance", distance)){ m_camera.look_at(position, normalize(center - position), distance); }

		float fovy = m_camera.fovy();
		if(slider_float("fovy", fovy, 1, 180)){ m_camera.set_fovy(fovy); }

		float near_clip = m_camera.near_clip();
		if(input_float("near_clip", near_clip)){ m_camera.set_near_clip(near_clip); }

		float far_clip = m_camera.far_clip();
		if(input_float("far_clip", far_clip)){ m_camera.set_far_clip(far_clip); }
	}

private:

	render::camera& m_camera;
};

///////////////////////////////////////////////////////////////////////////////////////////////////

} //namespace gui

///////////////////////////////////////////////////////////////////////////////////////////////////

} //namespace render

///////////////////////////////////////////////////////////////////////////////////////////////////

} //namespace nn

///////////////////////////////////////////////////////////////////////////////////////////////////

#endif
