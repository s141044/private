
#pragma once

#ifndef NN_RENDER_LIGHT_DIRECTION_HPP
#define NN_RENDER_LIGHT_DIRECTION_HPP

#include"../base.hpp"

///////////////////////////////////////////////////////////////////////////////////////////////////

namespace nn{

///////////////////////////////////////////////////////////////////////////////////////////////////

namespace render{

///////////////////////////////////////////////////////////////////////////////////////////////////
//directional_light
///////////////////////////////////////////////////////////////////////////////////////////////////

class directional_light
{
public:

	const float3 &power() const { return m_power; }
	void set_power(const float3 &power){ m_power = power; }

	const float3 &direction() const { return m_direction; }
	void set_direction(const float3 &direction){ m_direction = direction; }

	float source_angle() const { return m_source_angle; }
	void set_source_angle(const float source_angle){ m_source_angle = source_angle; }

private:

	float3	m_power = 1;
	float3	m_direction = float3(0, 1, 0);
	float	m_source_angle = 0.5f;
};

///////////////////////////////////////////////////////////////////////////////////////////////////

} //namespace render

///////////////////////////////////////////////////////////////////////////////////////////////////

} //namespace nn

///////////////////////////////////////////////////////////////////////////////////////////////////

#endif
